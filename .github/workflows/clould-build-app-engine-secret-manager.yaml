name: Deploy app engine with cloud build and config secret manager env
run-name: Deploy ${{ github.ref_name }} to dev environment by @${{ github.actor }}
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.actor }}
  cancel-in-progress: true

env:
  GCLOUD_PROJECT_ID: joc-token-vesting-dev
  GCLOUD_PROJECT_SERVICE_ID: 'test'

jobs:
  app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./next-example
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: 'actions/checkout@v3'

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: '**/package-lock.json'
      
      - run: npm install
      - run: npm run build

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      
      - name: Add app.yaml
        run: |
          echo "
          runtime: nodejs16
          env: standard
          service: ${{ env.GCLOUD_PROJECT_SERVICE_ID }}
          handlers:
            - url: /.*
              secure: always
              redirect_http_response_code: 301
              script: auto
          build_env_variables:
            GOOGLE_NODE_RUN_SCRIPTS: ''
          env_variables:
            CLOUD_SERVICE_PROVIDER: 'gcloud'
          " >> app.yaml
      - name: Add .gcloudignore
        run: |
          echo "
          *
          !.next
          !package.json
          !package-lock.json
          !app.yaml
          !.npmrc
          !next.config.js
          " >> .gcloudignore

      - name: Add cloudbuild.yaml
        run: |
          echo "
            steps:
            - name: 'gcr.io/cloud-builders/gcloud'
              entrypoint: 'bash'
              args: 
                - -c
                - |
                  echo $'\n  NEXT_PUBLIC_CONTRACT_ADDRESS: '0x4A4dAF140D8222DcDcb3dE03D21b3B3d4bE12B08'' >> app.yaml
                  gcloud -q app deploy

              secretEnv: ['NEXT_PUBLIC_CONTRACT_ADDRESS']
            availableSecrets:
              secretManager:
              - versionName: projects/${{ env.GCLOUD_PROJECT_ID }}/secrets/ADMINISTRATOR_NEXT_PUBLIC_CONTRACT_ADDRESS/versions/latest
                env: 'NEXT_PUBLIC_CONTRACT_ADDRESS'
            timeout: '1600s'
          " >> cloudbuild.yaml
      
      - name: 'Deploy'
        run: gcloud builds submit
      